Say you have a variable of interest that you know to be normally distributed, but you do not know its center or spread. In order to ascertain its center, you collect samples and use the sample mean. The best way to estimate the center of the distribution, naturally, would be to take as many samples as you feasibly can and calculate the sample mean. 

However, suppose each measurement imposes some fixed cost C. It is no longer feasible to simply collect more and more samples until you're sure you have the right answer. What's the alternative?

Resampling!

Let's further suppose that, not only is there a fixed sampling cost C, there is also a cost imposed by how far off from the "true" mean you are. We'll denote this cost F(D), where D is equal to the absolute value of the estimated mean subtracted from the true mean. 

resample_mean <- function(data, n){
	re_means <- replicate(n, mean(sample(data, size=length(data), replace=TRUE)))
	return(mean(re_means))
}


weighted_mean <- function(data, weights){
	wdat <- data*weights
	wmean <- sum(wdat)/length(data)
}

#rdirichlet(num_resamples, rep(shape, num_rows))
FRW_resample_mean <- function(data, n){
	re_weights <- length(data)*rdirichlet(n, rep(1, length(data))) 
	re_weights <- as.data.frame(re_weights)
	re_means <- apply(re_weights, 1, FUN=function(x) weighted_mean(data, x))
	return(mean(re_means))
}


> samp20 <- rnorm(20, mean=150, sd=15)
> samp100 <- rnorm(100, mean=150, sd=15)
> samp_mean_20 <- mean(samp20)
> samp_mean_100 <- mean(samp100)
> resamp_mean_20_10 <- resample_mean(samp20, 10)
> frw_resamp_mean_10_20 <- FRW_resample_mean(samp20, 10)