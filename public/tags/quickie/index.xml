<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>quickie on Charlie Carter</title>
    <link>https://seancc.github.io/tags/quickie/</link>
    <description>Recent content in quickie on Charlie Carter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Sep 2019 17:51:49 -0400</lastBuildDate><atom:link href="https://seancc.github.io/tags/quickie/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Quick D&amp;D Experiment</title>
      <link>https://seancc.github.io/posts/dnd-experiment/</link>
      <pubDate>Mon, 02 Sep 2019 17:51:49 -0400</pubDate>
      
      <guid>https://seancc.github.io/posts/dnd-experiment/</guid>
      <description>Just a quick experiment I was curious about! A few friends and I are starting up a new D&amp;amp;D campaign, and a player asked me how I prefer stats for characters to be determined. I&amp;rsquo;ve always preferred point buying, but I enjoy the randomness of rolling stats. I ran some simulations to get an idea of what kind of stat distributions different rolling methods give!
First, we define our functions for generating stats.</description>
    </item>
    
    <item>
      <title>Random Walkers and Web Crawlers</title>
      <link>https://seancc.github.io/posts/wiki-crawler/</link>
      <pubDate>Mon, 02 Sep 2019 17:51:49 -0400</pubDate>
      
      <guid>https://seancc.github.io/posts/wiki-crawler/</guid>
      <description>Brief Overview: This was put together for a class assignment in Probability Theory 2. We were to discuss random walks and how they relate to the PageRank algorithm.
An overview of the relevant mathematics is given, and a small web crawler is implemented to collect links between wikipedia articles. The links are saved in a SQLite database and used later to construct a graph and rank articles based on centrality.</description>
    </item>
    
  </channel>
</rss>
